---
title: "Trust in Science in the 2018 Global Health Monitor Report"
format:
  live-dashboard:
    theme: pulse
    orientation: columns
    nav-buttons: [github, linkedin]
    github: https://github.com/VisruthSK/lab-4
    linkedin: https://www.linkedin.com/in/visruthsk/
logo: images/Wellcome_Trust_logo.svg
logo-alt: stylized W above "wellcome"
embed-resources: true
engine: knitr
resources:
  - data
webr:
  render-df: gt-interactive
  packages:
    - tidyverse
    - gt
    - rnaturalearthdata
    - rnaturalearth
    - here
    - glue
    - htmltools
    - htmlwidgets
    - RColorBrewer
    - scales
    - leaflet
    - sf
    - plotly
    - gghalves
    - webr
---

{{< include ./_extensions/r-wasm/live/_knitr.qmd >}}

# Setup

## Column - 1 {width="40%"}

### Data and such

```{webr}
#| title: Data
#| label: interactive-df
#| autorun: true
#| warning: false
#| echo: false
#| edit: false
library(tidyverse)
library(gt)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
library(RColorBrewer)
library(scales)
library(htmlwidgets)
library(htmltools)
use("glue", "glue")
use("here", "here")

original_df <- read_csv(here("data", "wellcome.csv"))

original_df |>
  gt() |>
  opt_interactive(
    use_search = TRUE,
    use_resizers = TRUE,
    use_compact_mode = TRUE,
    use_highlight = TRUE,
    use_page_size_select = TRUE,
    page_size_default = 50
  )
```

## Column - 2

### Modification Details {height="30%"}
::: {.card title="Modification Details"}

The next card has an webR code chunk that allows you to freely exercise constraints on the data being visualized on the other pages. You can see the pre-processed `df` being created on the left, and can browse it through the Data tab. These won't react to your changes.

There are some comments in the code detailing what lines do. After you make adjustments to the chunk, run it, then run the other code chunks.
:::

### webR

```{webr}
#| title: webR modifications
#| label: modify
#| autorun: true
#| define: 
#|   -
print("Hello World")

# Change the {{RColorBrewer}} colour palette
region_colours <- brewer.pal(7, "Dark2")
# region_colours <- brewer.pal(7, "Pastel2")

# Use `display.brewer.all()` to see palettes exposed by {{RColorBrewer}}
# https://cran.r-project.org/web/packages/RColorBrewer/RColorBrewer.pdf

# Filter the data to include certain countries or regions.
df <- original_df |> filter(!Region %in% c("Not assigned"))
# df <- df |> filter(Country != "United States")

country_data <- ne_countries(scale = "medium", returnclass = "sf") |>
  mutate(
    admin = case_when(
      admin == "United States of America" ~ "United States",
      admin == "Czechia" ~ "Czech Republic",
      admin == "Palestine" ~ "Palestinian Territories",
      admin == "Republic of the Congo" ~ "Republic of Congo",
      admin == "Gambia" ~ "The Gambia",
      admin == "United Republic of Tanzania" ~ "Tanzania",
      admin == "North Macedonia" ~ "Macedonia",
      admin == "Republic of Serbia" ~ "Serbia",
      TRUE ~ admin
    )
  ) |>
  right_join(science, by = join_by(admin == Country)) |>
  drop_na(scalerank)

science <- df |>
  drop_na(Q1) |>
  mutate(science = Q1 < 3, across(c(Country, Region), fct)) |>
  group_by(Country, Region) |>
  summarize(percent = mean(science), .groups = "drop")

vaccine <- df |>
  drop_na(Q25, Q26) |>
  mutate(
    safe = Q25 %in% c(4, 5),
    effective = Q26 %in% c(4, 5),
    across(c(Country, Region), fct)
  ) |>
  group_by(Country, Region) |>
  summarize(
    safe = mean(safe),
    effective = mean(effective),
    .groups = "drop"
  )

# Set the default interactive table options which are applied to tables on other pages
default_interactive_table_options <- \(data)
  opt_interactive(
    data,
    use_search = TRUE,
    use_resizers = TRUE,
    use_compact_mode = TRUE,
    use_highlight = TRUE,
    use_page_size_select = TRUE,
    page_size_default = 50
  )
```

# Science

## Column - 1

### Perceived Science Knowledge per Country {.tabset}

#### Perceived Science Knowledge per Country

::: {.card expandable="false"}
Percentage of people who answered "a lot" or "some" to the question: *How much do you, personally, know about science? Do you know a lot, some, not much, or nothing at all?*

```{webr}
#| label: map
#| autorun: true
#| max-lines: 10
country_colours <- colorNumeric(
  palette = "Purples",
  domain = country_data$percent,
  na.color = "#f9f9f9"
)

country_labels <- glue(
  "<strong>{country_data$admin}</strong><br/>{percent(country_data$percent, accuracy = 0.1)}"
) |>
  lapply(HTML)

country_data |>
  leaflet() |>
  addTiles(options = tileOptions(noWrap = TRUE)) |>
  addPolygons(
    fillColor = ~ country_colours(percent),
    weight = 1,
    opacity = 1,
    color = "white",
    dashArray = "3",
    fillOpacity = 0.7,
    label = country_labels,
    highlightOptions = highlightOptions(
      weight = 3,
      color = "#666",
      dashArray = "",
      fillOpacity = 0.9,
      bringToFront = TRUE
    ),
    group = "Countries"
  ) |> 
  onRender("
    function(el, x) {
      el.style.backgroundColor = 'transparent';
    }
  ") |>
  addControl(
    html = tags$div(
      tags$h6(
        style = "margin-bottom: 2px; margin-top: 2px; text-align:center;",
        "Perceived Science Knowledge per Country ('a lot' or 'some')"
      ),
      tags$p(
        style = "font-size: 0.7em; margin-bottom: 2px; margin-top: 0px; text-align:center;",
        "How much do you, personally, know about science? Do you know a lot, some, not much, or nothing at all?"
      )
    ),
    position = "topright"
  )
```
:::

#### Data

```{webr}
#| label: science-data-gt
#| max-lines: 5
#| autorun: true
#| expandable: false
science |>
  arrange(desc(percent)) |>
  gt() |>
  fmt_percent(columns = percent, decimals = 1) |>
  cols_label(
    Country = "Country",
    percent = "Science Knowledge"
  ) |>
  opt_row_striping(FALSE) |>
  data_color(
    columns = Region,
    method = "factor",
    palette = alpha(region_colours, 0.5)
  ) |>
  default_interactive_table_options()
```


## Column - 2

```{ojs}
//| echo: false
//| title: "Flash Facts"
md`**Americans** had the *highest* percentage of respondents who perceived themselves as being knowledgeable about science (~83%); however, around 10% of respondents *disagreed* on the safety of vaccines and about 5% of respondents *disputed* vaccines' effectiveness.`
```

```{ojs}
//| echo: false
//| title: "Flash Facts"
md`Surveyed respondents from **Egypt** expressed some of the *least* disbelief in the effectiveness (~0.5%) and safety (~0.3%) amongst all respondents. This stands in stark contrast to the United States.`
```

# Vaccine Belief

## Column - 1

### Vaccine Safety and Efficacy {.tabset}

#### Vaccine Safety and Efficacy

```{webr}
#| label: plotly
#| autorun: true
#| warning: false
#| max-lines: 10
library(plotly)

p <- vaccine |>
  ggplot(aes(
    x = safe,
    y = effective
  )) +
  geom_point(aes(
    text = glue(
      "Country: {Country}<br>",
      "Region: {Region}<br>",
      "Safe: {percent(safe, accuracy = 1)}<br>",
      "Effective: {percent(effective, accuracy = 1)}"
    ),
    color = Region
  )) +
  geom_smooth(method = "lm", se = FALSE, linewidth = 0.5) +
  labs(
    x = "Disagree on Safety",
    y = "Disagree on Efficacy",
    title = "Positive Relation Between Disbelief in Vaccine Safety and Efficacy"
  ) +
  scale_x_continuous(labels = label_percent()) +
  scale_y_continuous(labels = label_percent()) +
  scale_color_manual(values = region_colours) +
  theme_bw()

ggplotly(p, tooltip = "text")
```

#### Data

```{webr}
#| label: vaccine-safety-efficacy-gt
#| max-lines: 5
#| autorun: true
#| expandable: false
vaccine |>
  arrange((safe + effective) / 2) |>
  gt() |>
  fmt_percent(columns = c(safe, effective), decimals = 1) |>
  cols_label(
    safe = "Safety",
    effective = "Efficacy"
  ) |>
  data_color(
    columns = Region,
    method = "factor",
    palette = alpha(region_colours, 0.5)
  ) |>
  default_interactive_table_options()
```

## Column - 2

### Vaccine Belief by Region and Country {.tabset}

#### Vaccine Safety by Region and Country

::: {.card}
Percentage of people who agreed with the statement: *Vaccines are safe.*

```{webr}
#| label: funky-plot
#| autorun: true
#| warning: false
#| max-lines: 10
library(gghalves)
# Taken from https://github.com/teunbrand/ggplot_tricks?tab=readme-ov-file#lets-begin
my_fill <- aes(fill = after_scale(alpha(colour, 0.3)))
# A small nudge offset
offset <- 0.025

vaccine_info <- df |>
  drop_na(Q25) |>
  mutate(
    vaccine = Q25 < 3,
    across(c(Country, Region), fct)
  ) |>
  group_by(Region, Country) |>
  summarize(percent = mean(vaccine), .groups = "drop_last")

vaccine_info |>
  ggplot(
    aes(
      x = fct_reorder(Region, percent),
      y = percent,
      colour = Region,
      !!!my_fill
    )
  ) +
  geom_half_violin(side = "l", trim = FALSE, scale = "width") +
  geom_half_boxplot(
    side = "l",
    coef = 0,
    width = 0.4,
    outliers = FALSE,
    alpha = 0.3
  ) +
  geom_half_dotplot(
    method = "histodot",
    stackdir = "up",
    dotsize = 1,
    binwidth = 0.01
  ) +
  scale_y_continuous(labels = label_percent(), limits = c(0, 1)) +
  scale_color_manual(values = region_colours) +
  scale_fill_manual(values = region_colours) +
  coord_flip() +
  labs(
    x = element_blank(),
    y = element_blank(),
    title = element_blank()
  ) +
  theme_bw() +
  theme(legend.position = "none")
```
:::

#### Data

```{webr}
#| label: vaccine-data-gt
#| max-lines: 5
#| autorun: true
#| expandable: false
vaccine_info |>
  ungroup() |>
  mutate(Region = fct_reorder(Region, percent, .desc = TRUE)) |>
  group_by(Region) |>
  arrange(desc(percent), .by_group = TRUE) |>
  gt() |>
  fmt_percent(columns = percent, decimals = 1) |>
  cols_label(
    percent = "Vaccine Belief"
  ) |>
  data_color(
    columns = Region,
    method = "factor",
    palette = alpha(region_colours, 0.5)
  ) |>
  default_interactive_table_options()
```
