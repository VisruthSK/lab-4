---
title: "Trust in Science in the 2018 Global Health Monitor Report"
format:
  live-dashboard:
    theme: pulse
    orientation: columns
    nav-buttons: [github, linkedin]
    github: https://github.com/VisruthSK/lab-4
    linkedin: https://www.linkedin.com/in/visruthsk/
logo: images/Wellcome_Trust_logo.svg
logo-alt: stylized W above "wellcome"
embed-resources: true
engine: knitr
resources:
  - data
webr:
  render-df: gt-interactive # TODO: adjust the Data tabsets to rely on gt through this
  packages:
    - tidyverse
    - gt
    - rnaturalearthdata
    - rnaturalearth
    - here
    - glue
    - htmltools
    - htmlwidgets
    - RColorBrewer
    - scales
    - leaflet
    - sf
    - plotly
    - gghalves
    - webr
---

{{< include ./_extensions/r-wasm/live/_knitr.qmd >}}

# Setup

## Column - 1

### Data and such {.tabset}

#### Unmodifiable Setup
::: {.card expandable="false"}
This sets up the dashboard.

```{webr}
#| label: setup
#| warning: false
#| autorun: true
#| edit: false
library(tidyverse)
library(gt)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
library(RColorBrewer)
library(scales)
library(htmlwidgets)
library(htmltools)
use("glue", "glue")
use("here", "here")

df <- read_csv(here("data", "wellcome.csv"))

df <- "0=Not assigned, 1=Africa,2=Africa,3=Africa,4=Africa,5=Africa,6=Americas,7=Americas,8=Americas,9=Asia,10=Asia,11=Asia,12=Asia,13=Middle East,14=Former Soviet Union,15=Europe,16=Europe,17=Europe,18=Asia" |>
  str_split(",") |>
  unlist() |>
  str_trim() |>
  as_tibble() |>
  separate_wider_delim(value, "=", names = c("Regions_Report", "Region")) |>
  mutate(Regions_Report = as.numeric(Regions_Report)) |>
  right_join(df) |>
  select(-Regions_Report)

df <- "1=United States, 2=Egypt, 3=Morocco, 4=Lebanon, 5=Saudi Arabia, 6=Jordan, 8=Turkey, 9=Pakistan, 10=Indonesia, 11=Bangladesh, 12=United Kingdom, 13=France, 14=Germany, 15=Netherlands, 16=Belgium, 17=Spain, 18=Italy, 19=Poland, 20=Hungary, 21=Czech Republic, 22=Romania, 23=Sweden, 24=Greece, 25=Denmark, 26=Iran, 28=Singapore, 29=Japan, 30=China, 31=India, 32=Venezuela, 33=Brazil, 34=Mexico, 35=Nigeria, 36=Kenya, 37=Tanzania, 38=Israel, 39=Palestinian Territories, 40=Ghana, 41=Uganda, 42=Benin, 43=Madagascar, 44=Malawi, 45=South Africa, 46=Canada, 47=Australia, 48=Philippines, 49=Sri Lanka, 50=Vietnam, 51=Thailand, 52=Cambodia, 53=Laos, 54=Myanmar, 55=New Zealand, 57=Botswana, 60=Ethiopia, 61=Mali, 62=Mauritania, 63=Mozambique, 64=Niger, 65=Rwanda, 66=Senegal, 67=Zambia, 68=South Korea, 69=Taiwan, 70=Afghanistan, 71=Belarus, 72=Georgia, 73=Kazakhstan, 74=Kyrgyzstan, 75=Moldova, 76=Russia, 77=Ukraine, 78=Burkina Faso, 79=Cameroon, 80=Sierra Leone, 81=Zimbabwe, 82=Costa Rica, 83=Albania, 84=Algeria, 87=Argentina, 88=Armenia, 89=Austria, 90=Azerbaijan, 96=Bolivia, 97=Bosnia and Herzegovina, 99=Bulgaria, 100=Burundi, 103=Chad, 104=Chile, 105=Colombia, 106=Comoros, 108=Republic of Congo, 109=Croatia, 111=Cyprus, 114=Dominican Republic, 115=Ecuador, 116=El Salvador, 119=Estonia, 121=Finland, 122=Gabon, 124=Guatemala, 125=Guinea, 128=Haiti, 129=Honduras, 130=Iceland, 131=Iraq, 132=Ireland, 134=Ivory Coast, 137=Kuwait, 138=Latvia, 140=Liberia, 141=Libya, 143=Lithuania, 144=Luxembourg, 145=Macedonia, 146=Malaysia, 148=Malta, 150=Mauritius, 153=Mongolia, 154=Montenegro, 155=Namibia, 157=Nepal, 158=Nicaragua, 160=Norway, 163=Panama, 164=Paraguay, 165=Peru, 166=Portugal, 173=Serbia, 175=Slovakia, 176=Slovenia, 183=Eswatini, 184=Switzerland, 185=Tajikistan, 186=The Gambia, 187=Togo, 190=Tunisia, 191=Turkmenistan, 193=United Arab Emirates, 194=Uruguay, 195=Uzbekistan, 197=Yemen, 198=Kosovo, 202=Northern Cyprus" |>
  str_split(",") |>
  unlist() |>
  str_trim() |>
  as_tibble() |>
  separate_wider_delim(value, "=", names = c("WP5", "Country")) |>
  mutate(WP5 = as.numeric(WP5)) |>
  right_join(df) |>
  select(-WP5)

cleaned_countries <- ne_countries(scale = "medium", returnclass = "sf") |>
  mutate(
    admin = case_when(
      admin == "United States of America" ~ "United States",
      admin == "Czechia" ~ "Czech Republic",
      admin == "Palestine" ~ "Palestinian Territories",
      admin == "Republic of the Congo" ~ "Republic of Congo",
      admin == "Gambia" ~ "The Gambia",
      admin == "United Republic of Tanzania" ~ "Tanzania",
      admin == "North Macedonia" ~ "Macedonia",
      admin == "Republic of Serbia" ~ "Serbia",
      TRUE ~ admin
    )
  )

print("Setup Complete")
```
:::

#### Data

```{webr}
#| label: interactive-df
#| autorun: true
#| echo: false
#| edit: false
#| expandable: false
df |>
  gt() |>
  opt_interactive(
    use_search = TRUE,
    use_resizers = TRUE,
    use_compact_mode = TRUE,
    use_highlight = TRUE,
    use_page_size_select = TRUE,
    page_size_default = 50
  )
```

## Column - 2

::: {.card title="Modification Details"}

:::

::: {.card title="webR modifications"}

```{webr}
#| label: modify
#| autorun: true
print("Hello World")

# Change the {{RColorBrewer}} colour palette
region_colours <- brewer.pal(7, "Dark2")
# region_colours <- brewer.pal(7, "Pastel2")

# Use `display.brewer.all()` to see palettes exposed by {{RColorBrewer}}
# https://cran.r-project.org/web/packages/RColorBrewer/RColorBrewer.pdf

# Filter the data to include certain countries or regions.
df <- df |> filter(Region !%in% c("Not assigned"))
# df <- df |> filter(Country != "United States")

science <- df |>
  drop_na(Q1) |>
  mutate(science = Q1 < 3, across(c(Country, Region), fct)) |>
  group_by(Country, Region) |>
  summarize(percent = mean(science), .groups = "drop")

country_data <- cleaned_countries |>
  right_join(science, by = join_by(admin == Country)) |>
  drop_na(scalerank)

vaccine <- df |>
  drop_na(Q25, Q26) |>
  mutate(
    safe = Q25 %in% c(4, 5),
    effective = Q26 %in% c(4, 5),
    across(c(Country, Region), fct)
  ) |>
  group_by(Country, Region) |>
  summarize(
    safe = mean(safe),
    effective = mean(effective),
    .groups = "drop"
  )

# Set the default interactive table options which are applied to tables on other pages
default_interactive_table_options <- \(data)
  opt_interactive(
    data,
    use_search = TRUE,
    use_resizers = TRUE,
    use_compact_mode = TRUE,
    use_highlight = TRUE,
    use_page_size_select = TRUE,
    page_size_default = 50
  )
```
:::

# Science

## Column - 1

### Perceived Science Knowledge per Country {.tabset}

#### Perceived Science Knowledge per Country

::: {.card expandable="false"}
Percentage of people who answered "a lot" or "some" to the question: *How much do you, personally, know about science? Do you know a lot, some, not much, or nothing at all?*

```{webr}
#| label: map
#| autorun: true
country_colours <- colorNumeric(
  palette = "Purples",
  domain = country_data$percent,
  na.color = "#f9f9f9"
)

country_labels <- glue(
  "<strong>{country_data$admin}</strong><br/>{percent(country_data$percent, accuracy = 0.1)}"
) |>
  lapply(HTML)

country_data |>
  leaflet() |>
  addTiles(options = tileOptions(noWrap = TRUE)) |>
  addPolygons(
    fillColor = ~ country_colours(percent),
    weight = 1,
    opacity = 1,
    color = "white",
    dashArray = "3",
    fillOpacity = 0.7,
    label = country_labels,
    highlightOptions = highlightOptions(
      weight = 3,
      color = "#666",
      dashArray = "",
      fillOpacity = 0.9,
      bringToFront = TRUE
    ),
    group = "Countries"
  ) |> 
  onRender("
    function(el, x) {
      el.style.backgroundColor = 'transparent';
    }
  ") |>
  addControl(
    html = tags$div(
      tags$h4(
        style = "margin-bottom: 2px; margin-top: 2px; text-align:center;",
        "Perceived Science Knowledge per Country ('a lot' or 'some')"
      ),
      tags$p(
        style = "font-size: 0.7em; margin-bottom: 2px; margin-top: 0px; text-align:center;",
        "How much do you, personally, know about science? Do you know a lot, some, not much, or nothing at all?"
      )
    ),
    position = "topright"
  )
```
:::

#### Data

```{webr}
#| label: science-data
#| max-lines: 5
science |>
  arrange(desc(percent)) |>
  gt() |>
  fmt_percent(columns = percent, decimals = 1) |>
  cols_label(
    Country = "Country",
    percent = "Science Knowledge"
  ) |>
  opt_row_striping(FALSE) |>
  data_color(
    columns = Region,
    method = "factor",
    palette = alpha(region_colours, 0.5)
  ) |>
  default_interactive_table_options()
```


## Column - 2

::: {.card title="Flash Facts"}
**Americans** had the *highest* percentage of respondents who perceived themselves as being knowledgeable about science (~83%); however, around 10% of respondents *disagreed* on the safety of vaccines and about 5% of respondents *disputed* vaccines' effectiveness.
:::

::: {.card title="Flash Facts"}
Surveyed respondents from **Egypt** expressed some of the *least* disbelief in the effectiveness (~0.5%) and safety (~0.3%) amongst all respondents. This stands in stark contrast to the United States.
:::

# Vaccine Belief

## Column - 1

### Vaccine Safety and Efficacy {.tabset}

```{webr}
#| label: plotly
#| title: Vaccine Safety and Efficacy
#| autorun: true
#| warning: false
library(plotly)

p <- vaccine |>
  ggplot(aes(
    x = safe,
    y = effective
  )) +
  geom_point(aes(
    text = glue(
      "Country: {Country}<br>",
      "Region: {Region}<br>",
      "Safe: {percent(safe, accuracy = 1)}<br>",
      "Effective: {percent(effective, accuracy = 1)}"
    ),
    color = Region
  )) +
  geom_smooth(method = "lm", se = FALSE, linewidth = 0.5) +
  labs(
    x = "Disagree on Safety",
    y = "Disagree on Efficacy",
    title = "Positive Relation Between Disbelief in Vaccine Safety and Efficacy"
  ) +
  scale_x_continuous(labels = label_percent()) +
  scale_y_continuous(labels = label_percent()) +
  scale_color_manual(values = region_colours) +
  theme_bw()

ggplotly(p, tooltip = "text")
```

```{webr}
#| label: vaccine-safety-efficacy-gt
#| title: Data
#| max-lines: 5
vaccine |>
  mutate(tmp = (safe + effective) / 2) |>
  arrange(tmp) |>
  select(-tmp) |>
  gt() |>
  fmt_percent(columns = c(safe, effective), decimals = 1) |>
  cols_label(
    safe = "Safety",
    effective = "Efficacy"
  ) |>
  data_color(
    columns = Region,
    method = "factor",
    palette = alpha(region_colours, 0.5)
  ) |>
  default_interactive_table_options()
```

## Column - 2

### Vaccine Belief by Region and Country {.tabset}

::: {.card title = "Vaccine Safety by Region and Country"}
Percentage of people who agreed with the statement: *Vaccines are safe.*

```{webr}
#| label: funky-plot
#| autorun: true
#| warning: false
library(gghalves)
# Taken from https://github.com/teunbrand/ggplot_tricks?tab=readme-ov-file#lets-begin
my_fill <- aes(fill = after_scale(alpha(colour, 0.3)))
# A small nudge offset
offset <- 0.025

vaccine_info <- df |>
  drop_na(Q25) |>
  mutate(
    vaccine = Q25 < 3,
    across(c(Country, Region), fct)
  ) |>
  group_by(Region, Country) |>
  summarize(percent = mean(vaccine), .groups = "drop_last")

vaccine_info |>
  ggplot(
    aes(
      x = fct_reorder(Region, percent),
      y = percent,
      colour = Region,
      !!!my_fill
    )
  ) +
  geom_half_violin(side = "l", trim = FALSE, scale = "width") +
  geom_half_boxplot(
    side = "l",
    coef = 0,
    width = 0.4,
    outliers = FALSE,
    alpha = 0.3
  ) +
  geom_half_dotplot(
    method = "histodot",
    stackdir = "up",
    dotsize = 1,
    binwidth = 0.01
  ) +
  scale_y_continuous(labels = label_percent(), limits = c(0, 1)) +
  scale_color_manual(values = region_colours) +
  scale_fill_manual(values = region_colours) +
  coord_flip() +
  labs(
    x = element_blank(),
    y = element_blank(),
    title = element_blank()
  ) +
  theme_bw() +
  theme(legend.position = "none")
```
:::

```{webr}
#| label: vaccine-data-gt
#| title: Data
#| max-lines: 5
#| expandable: true
vaccine_info |>
  ungroup() |>
  mutate(Region = fct_reorder(Region, percent, .desc = TRUE)) |>
  group_by(Region) |>
  arrange(desc(percent), .by_group = TRUE) |>
  gt() |>
  fmt_percent(columns = percent, decimals = 1) |>
  cols_label(
    percent = "Vaccine Belief"
  ) |>
  data_color(
    columns = Region,
    method = "factor",
    palette = alpha(region_colours, 0.5)
  ) |>
  default_interactive_table_options()
```
